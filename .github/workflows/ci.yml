name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Prepare environment files
        env:
          BACKEND_SECRET: ${{ secrets.REALISONS_SECRET_KEY }}
          OPENAI_KEY: ${{ secrets.AI_GATEWAY_OPENAI_API_KEY }}
        run: |
          cp backend/.env.example backend/.env
          cp ai_gateway/.env.example ai_gateway/.env
          cp webapp/.env.example webapp/.env
          python - <<'PY'
import os
from pathlib import Path

backend_secret = os.environ.get("BACKEND_SECRET") or "ci-test-secret"
if backend_secret == "ci-test-secret":
    print("::warning::REALISONS_SECRET_KEY secret not provided; using CI fallback.")
backend_env = Path("backend/.env").read_text().splitlines()
backend_env = [
    "REALISONS_SECRET_KEY=" + backend_secret if line.startswith("REALISONS_SECRET_KEY=") else line
    for line in backend_env
]
Path("backend/.env").write_text("\n".join(backend_env) + "\n")

openai_key = os.environ.get("OPENAI_KEY") or "test-openai-key"
if openai_key == "test-openai-key":
    print("::warning::AI_GATEWAY_OPENAI_API_KEY secret not provided; using test key.")
ai_gateway_env = Path("ai_gateway/.env").read_text().splitlines()
ai_gateway_env = [
    "AI_GATEWAY_OPENAI_API_KEY=" + openai_key if line.startswith("AI_GATEWAY_OPENAI_API_KEY=") else line
    for line in ai_gateway_env
]
Path("ai_gateway/.env").write_text("\n".join(ai_gateway_env) + "\n")
PY

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: pip install -r backend/requirements.txt

      - name: Run backend tests
        env:
          PYTHONPATH: backend
        run: pytest backend/tests -q

      - name: Install AI Gateway dependencies
        run: pip install -r ai_gateway/requirements.txt

      - name: Run AI Gateway tests
        env:
          PYTHONPATH: ai_gateway
        run: pytest ai_gateway/tests -q

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install webapp dependencies
        working-directory: webapp
        run: npm ci

      - name: Run webapp tests
        working-directory: webapp
        run: npm test -- --watch=false
